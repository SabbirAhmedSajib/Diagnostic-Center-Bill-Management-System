@model Diagnostic_Center_Bill_Management_System.ViewModel.AccessModel

@{
    ViewBag.Title = "Index";
}

<style type="text/css">
    fieldset.scheduler-border {
        margin-top: 20px;
        border: solid 1px #DDD !important;
        padding: 0 10px 10px 10px;
        border-bottom: none;
    }

    legend.scheduler-border {
        width: auto !important;
        border: none;
        font-size: 14px;
    }
</style>

<fieldset class="scheduler-border">
    <legend class="scheduler-border">
        <strong>Test Request Entry</strong>
    </legend>

    <div>
        @using (Html.BeginForm("SaveInformation", "RequestMaster", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.PatientName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.PatientName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", @Value = Model.PatientName } })
                        @Html.ValidationMessageFor(model => model.PatientName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Select Test", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TestSetupId", ViewBag.list as List<SelectListItem>, "Select Info", htmlAttributes: new { @class = "form-control", onchange = "loadFee();" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="ADD" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</fieldset>
@if (Model.RequestDetailTempViewModels != null && Model.RequestDetailTempViewModels.Count > 0)
{
    <table class="table">
        <tr>
            <th>
                SL
            </th>
            <th>
                Test
            </th>
            <th>
                Fee
            </th>
        </tr>

        @foreach (var item in Model.RequestDetailTempViewModels)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SL)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TestName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fee)
                </td>

            </tr>
        }

    </table>

    <div class="row">
        <div class="col-md-10 text-right">
            <label for="fname">Total </label>
        </div>
        <div class="col-md-2 text-right">
            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="row">
        <div class="col-md-2 ">
            <label for="fname">Bill Number </label>
        </div>
        <div class="col-md-10 ">
            <input type="text" id="billnumber" />
        </div>
    </div>

    <br>
    <br>

    <div class="col-md-offset-2 col-md-10" style="text-align:right">
        <input type="submit" value="Save" class="btn btn-default" onclick="savedata()" />
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



    <script type="text/javascript">

        $(function () {
            $("#DateOfBirth").datepicker({
                dateFormat: 'yy-mm-dd'
            });
        });
    function loadFee() {
            $.ajax({
                url: '@Url.Action("Onclick", "RequestMaster")',
                cache: true,
                type: 'GET',
                data: { 'TestSetupId': $("#TestSetupId").val() },
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {
                    $("#Fee").val(data);
                }
            });
        }





    function savedata() {
            $.ajax({
                url: '@Url.Action("Save", "RequestMaster")',
                cache: true,
                type: 'Post',
                data: JSON.stringify({
                    "PatientName": $("#PatientName").val(), "MobileNumber": $("#MobileNumber").val(),
                    "DateOfBirth": $("#DateOfBirth").val(),
                }),
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data) {


                    $("#billnumber").val(data.billnumber);
                        alert('Successfully saved');

                }
            });
        }

    </script>

}
